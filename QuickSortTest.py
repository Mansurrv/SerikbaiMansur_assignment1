import xml.etree.ElementTree as ET
import csv
import os

XML_FILE_PATH = 'target/surefire-reports/TEST-org.example.QuickSortTest.xml'
CSV_FILE_PATH = 'surefire_quickSort_test_cases.csv'

def surefire_xml_to_csv(xml_path, csv_path):
    if not os.path.exists(xml_path):
        print(f"–û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {xml_path}")
        return

    try:
        tree = ET.parse(xml_path)
        root = tree.getroot()

        testsuite_name = root.get('name', 'N/A')
        
        test_cases_data = []
        
        for testcase in root.findall('testcase'):
            row = {
                'testsuite_name': testsuite_name,
                'testcase_name': testcase.get('name'),
                'class_name': testcase.get('classname'),
                'time_seconds': testcase.get('time')
            }
            test_cases_data.append(row)

        if not test_cases_data:
            print("–í–Ω–∏–º–∞–Ω–∏–µ: –í XML-—Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–µ–≥–∞ <testcase>.")
            return

        fieldnames = ['testsuite_name', 'testcase_name', 'class_name', 'time_seconds']

        with open(csv_path, 'w', newline='', encoding='utf-8') as csvfile:
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
            
            writer.writeheader()
            
            writer.writerows(test_cases_data)

        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ {len(test_cases_data)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤.")
        print(f"üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {csv_path}")

    except ET.ParseError as e:
        print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ XML: {e}")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    surefire_xml_to_csv(XML_FILE_PATH, CSV_FILE_PATH)